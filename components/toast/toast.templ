package toast

import (
	"github.com/jfbus/templ-components/components/button"
	"github.com/jfbus/templ-components/components/icon"
	"github.com/jfbus/templ-components/components/style"
	"strconv"
)

templ C(def D) {
	<div
		id="toast-default"
		class={ def.containerClass() }
		role="alert"
		x-data="{show: true}"
		x-show="show"
		if def.Close == CloseAuto {
			x-init={ "setTimeout(() => show = false, " + strconv.Itoa(def.closeDelayMS()) + ")" }
		}
	>
		if def.icon() != "" {
			<div class={ def.iconClass() }>
				@icon.C(icon.D{Icon: def.icon(), Class: style.D{style.Class("w-4 h-4")}})
				//<span class="sr-only">Fire icon</span>
			</div>
		}
		<div class="ms-3 text-sm font-normal">
			if def.Content != "" {
				{ def.Content }
			}
			{ children... }
		</div>
		if def.Close != CloseAuto {
			@button.C(button.D{
				Icon:      icon.X,
				Label:     "Fermer",
				HideLabel: true,
				Class: style.D{
					style.Class("ms-auto -mx-1.5 -my-1.5 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 inline-flex items-center justify-center h-8 w-8"),
					style.Color("bg-white text-gray-400 hover:text-gray-900 focus:ring-gray-300 hover:bg-gray-100 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700"),
				},
				Attributes: templ.Attributes{
					"@click": "show=false",
				},
			})
		}
	</div>
}
